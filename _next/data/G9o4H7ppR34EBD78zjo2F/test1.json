{"pageProps":{"source":"{\"compiledSource\":\"/*@jsxRuntime automatic @jsxImportSource react*/\\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\\nconst {useMDXComponents: _provideComponents} = arguments[0];\\nfunction _createMdxContent(props) {\\n  const _components = Object.assign({\\n    p: \\\"p\\\",\\n    iframe: \\\"iframe\\\"\\n  }, _provideComponents(), props.components);\\n  return _jsxs(_Fragment, {\\n    children: [_jsx(_components.p, {\\n      children: _jsx(_components.p, {\\n        children: \\\"![[linkTest1]]\\\"\\n      })\\n    }), \\\"\\\\n\\\", _jsxs(_components.p, {\\n      children: [_jsx(_components.iframe, {\\n        className: \\\"internal new\\\",\\n        width: \\\"100%\\\",\\n        src: \\\"Test.pdf#toolbar = 0\\\"\\n      }), \\\" This is normal text that is decribing the fact that the thing above here is a PDF embed\\\"]\\n    })]\\n  });\\n}\\nfunction MDXContent(props = {}) {\\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\\n    children: _jsx(_createMdxContent, props)\\n  })) : _createMdxContent(props);\\n}\\nreturn {\\n  default: MDXContent\\n};\\n\",\"frontmatter\":{},\"scope\":{}}","meta":{"authors":[],"title":null,"description":"This is normal text that is decribing the fact that the thing above here is a PDF embed\n...","date":null,"layout":"docs","slug":"test1","urlPath":"test1","isDraft":false,"editUrl":null,"showComments":false,"showEditLink":false,"showLinkPreviews":true,"showToc":true,"showSidebar":false},"siteMap":[]},"__N_SSG":true}